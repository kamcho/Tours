"""
Django settings for travelske project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path



# Build paths inside the project like this: BASE_DIR / 'subdir'.




BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-nci(^yh7#)g)kq54rn@r#ply@&0e3(b#2aave_^c5*+q-#5@_m')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1','kevin254.pythonanywhere.com','www.tourske.com','tourske.com','localhost','testserver']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'listings',
    'core',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Add WhiteNoise after SecurityMiddleware
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    "core.middleware.AnalyticsMiddleware",
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'core.middleware.StaffNavigationMiddleware',  # Custom staff navigation middleware
]

ROOT_URLCONF = 'travelske.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'travelske.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# This setup automatically switches between:
# - SQLite (local development) - when running on your local machine
# - MySQL (production) - when running on PythonAnywhere
# 
# To test locally: Just run your Django app normally
# To deploy: Upload to PythonAnywhere and it will automatically use MySQL
# =============================================================================

# Check if running on PythonAnywhere
ON_PYTHONANYWHERE = 'PYTHONANYWHERE_SITE' in os.environ

# Log which database configuration is being used
if ON_PYTHONANYWHERE:
    print("Using PythonAnywhere MySQL database")
else:
    print("Using local SQLite database")

if ON_PYTHONANYWHERE:
    # Production database (PythonAnywhere)
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'kevin254$tours',
            'USER': 'kevin254',
            'PASSWORD': '141778215aA!@#',
            'HOST': 'kevin254.mysql.pythonanywhere-services.com',
            'PORT': '3306',
            'OPTIONS': {
                'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
                'charset': 'utf8mb4',
            },
        }
    }
else:
    # Development database (Local SQLite)
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# =============================================================================
# ENVIRONMENT-SPECIFIC SETTINGS
# =============================================================================

if ON_PYTHONANYWHERE:
    # Production settings (PythonAnywhere)
    DEBUG = False
    ALLOWED_HOSTS = ['kevin254.pythonanywhere.com', 'www.tourske.com', 'tourske.com']
    
    # Security settings for production
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    X_FRAME_OPTIONS = 'DENY'
    
    # Static files (served by PythonAnywhere)
    STATIC_ROOT = '/home/kevin254/travelske/staticfiles'
    
    print("Production mode enabled")
else:
    # Development settings (Local)
    DEBUG = True
    ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'testserver']
    
    # Development-specific settings
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
    
    print("Development mode enabled")


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
AUTH_USER_MODEL = 'users.MyUser'
TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# WhiteNoise Configuration
STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'

# WhiteNoise settings for development
WHITENOISE_USE_FINDERS = True
WHITENOISE_AUTOREFRESH = True  # Auto-refresh static files during development

# Media files (User uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email Configuration for Password Reset and Partnership Form
# For development and production, use SMTP backend with Gmail
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'njokevin999@gmail.com'
EMAIL_HOST_PASSWORD = 'xmgm anof pkmx gvym'
DEFAULT_FROM_EMAIL = 'njokevin999@gmail.com'

# Partnership form recipient email
PARTNERSHIP_EMAIL_RECIPIENT = 'kevingitundu@gmail.com'

# Admin email for notifications
ADMIN_EMAIL = 'kevingitundu@gmail.com'

# Email notification settings
EMAIL_NOTIFICATIONS_ENABLED = True
EMAIL_SUBJECT_PREFIX = '[ToursKe] '


OPENAI_API_KEY = os.getenv('OPENAI_API_KEY', '')
# Default from email for password reset
DEFAULT_FROM_EMAIL = 'noreply@travelske.com'
