# Generated by Django 4.2 on 2025-08-25 10:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0006_verificationrequest_agency_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIChatInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(blank=True, help_text='Type of content (place, agency, user)', max_length=100)),
                ('content_id', models.PositiveIntegerField(blank=True, help_text='ID of the content object', null=True)),
                ('interaction_type', models.CharField(choices=[('question', 'Question Asked'), ('response', 'AI Response'), ('feedback', 'User Feedback')], default='question', max_length=20)),
                ('question', models.TextField(blank=True, help_text="User's question")),
                ('ai_response', models.TextField(blank=True, help_text="AI's response")),
                ('user_feedback', models.CharField(blank=True, help_text='User feedback (positive, negative, neutral)', max_length=20)),
                ('tokens_used', models.PositiveIntegerField(default=0, help_text='Number of tokens used in this interaction')),
                ('response_time_ms', models.PositiveIntegerField(default=0, help_text='Response time in milliseconds')),
                ('ai_model', models.CharField(blank=True, help_text='AI model used for response', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIInsightsReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('chat_analytics', 'Chat Analytics'), ('customer_questions', 'Customer Questions Analysis'), ('trending_topics', 'Trending Topics'), ('improvement_suggestions', 'Improvement Suggestions'), ('competitor_analysis', 'Competitor Analysis'), ('custom', 'Custom Report')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('content_type', models.CharField(blank=True, help_text='Type of content (place, agency, user)', max_length=100)),
                ('content_id', models.PositiveIntegerField(blank=True, help_text='ID of the content object', null=True)),
                ('insights_summary', models.TextField(blank=True, help_text='AI-generated insights summary')),
                ('detailed_analysis', models.JSONField(default=dict, help_text='Detailed analysis data')),
                ('recommendations', models.JSONField(default=list, help_text='List of recommendations')),
                ('status', models.CharField(choices=[('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed')], default='generating', max_length=20)),
                ('generation_started_at', models.DateTimeField(auto_now_add=True)),
                ('generation_completed_at', models.DateTimeField(blank=True, null=True)),
                ('tokens_used', models.PositiveIntegerField(default=0, help_text='Total tokens used for this report')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DateBuilderPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_activities', models.JSONField(default=list, help_text='List of preferred activity types')),
                ('activity_intensity', models.CharField(choices=[('low', 'Low - Relaxed'), ('medium', 'Medium - Balanced'), ('high', 'High - Active')], default='medium', max_length=20)),
                ('preferred_food_types', models.JSONField(default=list, help_text='List of preferred food types')),
                ('dietary_restrictions', models.JSONField(default=list, help_text='List of dietary restrictions')),
                ('budget_range', models.CharField(choices=[('budget', 'Budget Friendly'), ('moderate', 'Moderate'), ('premium', 'Premium'), ('luxury', 'Luxury')], default='moderate', max_length=20)),
                ('preferred_transport', models.JSONField(default=list, help_text='List of preferred transport methods')),
                ('max_travel_distance', models.PositiveIntegerField(default=50, help_text='Maximum travel distance in km')),
                ('preferred_duration', models.CharField(choices=[('half_day', 'Half Day (2-4 hours)'), ('full_day', 'Full Day (6-8 hours)'), ('weekend', 'Weekend (2-3 days)'), ('week', 'Week (5-7 days)')], default='full_day', max_length=20)),
                ('group_size', models.CharField(choices=[('couple', 'Couple (2 people)'), ('small_group', 'Small Group (3-5 people)'), ('medium_group', 'Medium Group (6-10 people)'), ('large_group', 'Large Group (10+ people)')], default='couple', max_length=20)),
                ('special_requirements', models.TextField(blank=True, help_text='Any special requirements or preferences')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Date Builder Preference',
                'verbose_name_plural': 'Date Builder Preferences',
            },
        ),
        migrations.CreateModel(
            name='DateBuilderSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('estimated_duration', models.CharField(blank=True, max_length=50)),
                ('itinerary', models.JSONField(default=list, help_text='List of suggested activities and locations')),
                ('recommended_places', models.JSONField(default=list, help_text='List of recommended place IDs')),
                ('recommended_agencies', models.JSONField(default=list, help_text='List of recommended agency IDs')),
                ('ai_model', models.CharField(blank=True, help_text='AI model used for suggestion', max_length=50)),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, help_text='AI confidence score (0-1)', max_digits=3, null=True)),
                ('tokens_used', models.PositiveIntegerField(default=0, help_text='Tokens used for this suggestion')),
                ('status', models.CharField(choices=[('generated', 'Generated'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='generated', max_length=20)),
                ('user_feedback', models.CharField(blank=True, choices=[('positive', 'Positive'), ('negative', 'Negative'), ('neutral', 'Neutral')], max_length=20)),
                ('feedback_notes', models.TextField(blank=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-generated_at'],
            },
        ),
        migrations.AddField(
            model_name='subscription',
            name='ai_insights_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='subscription',
            name='date_builder_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='subscription',
            name='service_features',
            field=models.JSONField(default=dict, help_text='Features and settings for this subscription'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='target_content_type',
            field=models.CharField(blank=True, help_text='Type of content (place, agency, user)', max_length=100),
        ),
        migrations.AddField(
            model_name='subscription',
            name='target_object_id',
            field=models.PositiveIntegerField(blank=True, help_text='ID of the target object', null=True),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='date_builder_priority',
            field=models.PositiveIntegerField(default=1, help_text='Priority in date builder suggestions (1=highest)'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='max_agencies',
            field=models.PositiveIntegerField(default=1, help_text='Maximum agencies that can use this plan'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='max_ai_chats_per_month',
            field=models.PositiveIntegerField(default=100, help_text='Maximum AI chat interactions per month'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='max_insights_reports',
            field=models.PositiveIntegerField(default=10, help_text='Maximum insights reports per month'),
        ),
        migrations.AddField(
            model_name='subscriptionplan',
            name='max_places',
            field=models.PositiveIntegerField(default=1, help_text='Maximum places that can use this plan'),
        ),
        migrations.AlterField(
            model_name='subscription',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('pending', 'Pending'), ('suspended', 'Suspended')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='subscription',
            name='subscription_type',
            field=models.CharField(choices=[('verification', 'Verification'), ('ai_chat', 'AI Chat Assistant'), ('ai_insights', 'AI Insights & Analytics'), ('date_builder', 'Date Builder Inclusion'), ('whatsapp_api', 'WhatsApp API Support'), ('feature_ads', 'Feature Advertising'), ('premium', 'Premium Package'), ('custom', 'Custom Package')], max_length=20),
        ),
        migrations.AlterField(
            model_name='subscriptionplan',
            name='duration_days',
            field=models.IntegerField(choices=[(30, '1 Month'), (90, '3 Months'), (180, '6 Months'), (365, '1 Year'), (730, '2 Years')], default=30),
        ),
        migrations.AlterField(
            model_name='subscriptionplan',
            name='plan_type',
            field=models.CharField(choices=[('verification', 'Verification'), ('ai_chat', 'AI Chat Assistant'), ('ai_insights', 'AI Insights & Analytics'), ('date_builder', 'Date Builder Inclusion'), ('whatsapp_api', 'WhatsApp API Support'), ('feature_ads', 'Feature Advertising'), ('premium', 'Premium Package'), ('custom', 'Custom Package')], max_length=20),
        ),
        migrations.AlterField(
            model_name='subscriptionplan',
            name='target_type',
            field=models.CharField(choices=[('user', 'User'), ('place', 'Place'), ('agency', 'Agency'), ('business', 'Business Entity')], max_length=20),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['user', 'status'], name='core_subscr_user_id_d435c1_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['subscription_type', 'status'], name='core_subscr_subscri_416fd6_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['target_content_type', 'target_object_id'], name='core_subscr_target__5e88ec_idx'),
        ),
        migrations.AddIndex(
            model_name='subscriptionplan',
            index=models.Index(fields=['plan_type', 'target_type', 'is_active'], name='core_subscr_plan_ty_a47c39_idx'),
        ),
        migrations.AddIndex(
            model_name='subscriptionplan',
            index=models.Index(fields=['is_popular', 'is_active'], name='core_subscr_is_popu_6f6b57_idx'),
        ),
        migrations.AddField(
            model_name='datebuildersuggestion',
            name='preferences',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestions', to='core.datebuilderpreference'),
        ),
        migrations.AddField(
            model_name='datebuildersuggestion',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='date_builder_suggestions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='datebuilderpreference',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='date_builder_preferences', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aiinsightsreport',
            name='subscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_insights_reports', to='core.subscription'),
        ),
        migrations.AddField(
            model_name='aiinsightsreport',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_insights_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aichatinteraction',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ai_chat_interactions', to='core.subscription'),
        ),
        migrations.AddField(
            model_name='aichatinteraction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_chat_interactions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='datebuildersuggestion',
            index=models.Index(fields=['user', 'status'], name='core_datebu_user_id_668016_idx'),
        ),
        migrations.AddIndex(
            model_name='datebuildersuggestion',
            index=models.Index(fields=['status', 'generated_at'], name='core_datebu_status_b9d348_idx'),
        ),
        migrations.AddIndex(
            model_name='aiinsightsreport',
            index=models.Index(fields=['user', 'report_type'], name='core_aiinsi_user_id_d6dd83_idx'),
        ),
        migrations.AddIndex(
            model_name='aiinsightsreport',
            index=models.Index(fields=['content_type', 'content_id'], name='core_aiinsi_content_dc2408_idx'),
        ),
        migrations.AddIndex(
            model_name='aiinsightsreport',
            index=models.Index(fields=['status', 'created_at'], name='core_aiinsi_status_4cc6fc_idx'),
        ),
        migrations.AddIndex(
            model_name='aichatinteraction',
            index=models.Index(fields=['user', 'created_at'], name='core_aichat_user_id_f9e211_idx'),
        ),
        migrations.AddIndex(
            model_name='aichatinteraction',
            index=models.Index(fields=['content_type', 'content_id'], name='core_aichat_content_963969_idx'),
        ),
        migrations.AddIndex(
            model_name='aichatinteraction',
            index=models.Index(fields=['interaction_type', 'created_at'], name='core_aichat_interac_6c9732_idx'),
        ),
    ]
