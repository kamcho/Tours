# Generated by Django 4.2 on 2025-08-14 08:08

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CardPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_last_four', models.CharField(max_length=4)),
                ('card_type', models.CharField(choices=[('visa', 'Visa'), ('mastercard', 'Mastercard'), ('amex', 'American Express'), ('discover', 'Discover'), ('other', 'Other')], max_length=20)),
                ('card_brand', models.CharField(blank=True, max_length=50)),
                ('expiry_month', models.PositiveIntegerField()),
                ('expiry_year', models.PositiveIntegerField()),
                ('processor', models.CharField(blank=True, help_text='Payment processor (Stripe, PayPal, etc.)', max_length=50)),
                ('processor_transaction_id', models.CharField(blank=True, max_length=200)),
                ('is_saved', models.BooleanField(default=False, help_text='Whether this card is saved for future use')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Card Payment',
                'verbose_name_plural': 'Card Payments',
            },
        ),
        migrations.CreateModel(
            name='MPesaPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(help_text='Customer phone number', max_length=15)),
                ('mpesa_request_id', models.CharField(help_text='M-Pesa request ID', max_length=100, unique=True)),
                ('checkout_request_id', models.CharField(blank=True, help_text='M-Pesa checkout request ID', max_length=100)),
                ('merchant_request_id', models.CharField(blank=True, help_text='M-Pesa merchant request ID', max_length=100)),
                ('mpesa_status', models.CharField(choices=[('initiated', 'Initiated'), ('pending', 'Pending'), ('successful', 'Successful'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('reversed', 'Reversed')], default='initiated', max_length=20)),
                ('result_code', models.CharField(blank=True, help_text='M-Pesa result code', max_length=10)),
                ('result_description', models.TextField(blank=True, help_text='M-Pesa result description')),
                ('mpesa_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('mpesa_metadata', models.JSONField(blank=True, default=dict, help_text='Additional M-Pesa response data')),
            ],
            options={
                'verbose_name': 'M-Pesa Payment',
                'verbose_name_plural': 'M-Pesa Payments',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('payment_type', models.CharField(choices=[('card', 'Credit/Debit Card'), ('mpesa', 'M-Pesa'), ('bank_transfer', 'Bank Transfer'), ('cash', 'Cash'), ('mobile_money', 'Other Mobile Money')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Icon class or emoji', max_length=50)),
                ('processing_fee_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('processing_fee_fixed', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('min_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('max_amount', models.DecimalField(decimal_places=2, default=Decimal('999999.99'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mpesa_consumer_key', models.CharField(blank=True, help_text='M-Pesa consumer key', max_length=200)),
                ('mpesa_consumer_secret', models.CharField(blank=True, help_text='M-Pesa consumer secret', max_length=200)),
                ('mpesa_passkey', models.CharField(blank=True, help_text='M-Pesa passkey', max_length=200)),
                ('mpesa_environment', models.CharField(choices=[('sandbox', 'Sandbox'), ('production', 'Production')], default='sandbox', max_length=20)),
                ('mpesa_business_shortcode', models.CharField(blank=True, help_text='M-Pesa business shortcode', max_length=10)),
                ('stripe_publishable_key', models.CharField(blank=True, help_text='Stripe publishable key', max_length=200)),
                ('stripe_secret_key', models.CharField(blank=True, help_text='Stripe secret key', max_length=200)),
                ('stripe_webhook_secret', models.CharField(blank=True, help_text='Stripe webhook secret', max_length=200)),
                ('default_currency', models.CharField(default='KES', help_text='Default currency for payments', max_length=3)),
                ('auto_capture', models.BooleanField(default=True, help_text='Automatically capture payments when authorized')),
                ('require_cvv', models.BooleanField(default=True, help_text='Require CVV for card payments')),
                ('default_processing_fee_percentage', models.DecimalField(decimal_places=2, default=Decimal('2.5'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('default_processing_fee_fixed', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Payment Setting',
                'verbose_name_plural': 'Payment Settings',
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(default=uuid.uuid4, max_length=100, unique=True)),
                ('reference_number', models.CharField(blank=True, max_length=100, unique=True)),
                ('external_reference', models.CharField(blank=True, help_text='External payment provider reference', max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='KES', help_text='ISO 4217 currency code', max_length=3)),
                ('processing_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20)),
                ('transaction_type', models.CharField(choices=[('payment', 'Payment'), ('refund', 'Refund'), ('partial_refund', 'Partial Refund'), ('chargeback', 'Chargeback')], default='payment', max_length=20)),
                ('content_type', models.CharField(blank=True, help_text='Type of content being paid for', max_length=100)),
                ('object_id', models.PositiveIntegerField(blank=True, help_text='ID of the content object', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional transaction metadata')),
            ],
            options={
                'verbose_name': 'Payment Transaction',
                'verbose_name_plural': 'Payment Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(help_text='Payment provider (Stripe, M-Pesa, etc.)', max_length=50)),
                ('event_type', models.CharField(help_text='Type of webhook event', max_length=100)),
                ('webhook_id', models.CharField(help_text="Provider's webhook ID", max_length=200, unique=True)),
                ('payload', models.JSONField(help_text='Raw webhook payload')),
                ('processed', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processed', 'Processed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('received_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Payment Webhook',
                'verbose_name_plural': 'Payment Webhooks',
                'ordering': ['-received_at'],
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_id', models.CharField(default=uuid.uuid4, max_length=100, unique=True)),
                ('external_refund_id', models.CharField(blank=True, help_text='External payment provider refund ID', max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('reason', models.CharField(blank=True, choices=[('duplicate', 'Duplicate charge'), ('fraudulent', 'Fraudulent charge'), ('requested_by_customer', 'Requested by customer'), ('defective_product', 'Defective product'), ('not_as_described', 'Not as described'), ('other', 'Other')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('original_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='core.paymenttransaction')),
            ],
            options={
                'verbose_name': 'Refund',
                'verbose_name_plural': 'Refunds',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['provider', 'event_type'], name='core_paymen_provide_094807_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['status'], name='core_paymen_status_58e98e_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['received_at'], name='core_paymen_receive_7ff407_idx'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='payment_method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='core.paymentmethod'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_transactions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mpesapayment',
            name='transaction',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mpesa_payment', to='core.paymenttransaction'),
        ),
        migrations.AddField(
            model_name='cardpayment',
            name='transaction',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='card_payment', to='core.paymenttransaction'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['refund_id'], name='core_refund_refund__cd05b2_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['external_refund_id'], name='core_refund_externa_fb508f_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['status'], name='core_refund_status_0d1768_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['transaction_id'], name='core_paymen_transac_6acb4b_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['reference_number'], name='core_paymen_referen_68633d_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['external_reference'], name='core_paymen_externa_e55cad_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['status'], name='core_paymen_status_04c981_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['user', 'created_at'], name='core_paymen_user_id_ea9c1a_idx'),
        ),
        migrations.AddIndex(
            model_name='mpesapayment',
            index=models.Index(fields=['mpesa_request_id'], name='core_mpesap_mpesa_r_e445e2_idx'),
        ),
        migrations.AddIndex(
            model_name='mpesapayment',
            index=models.Index(fields=['checkout_request_id'], name='core_mpesap_checkou_43b26a_idx'),
        ),
        migrations.AddIndex(
            model_name='mpesapayment',
            index=models.Index(fields=['phone_number'], name='core_mpesap_phone_n_2e2c94_idx'),
        ),
        migrations.AddIndex(
            model_name='mpesapayment',
            index=models.Index(fields=['mpesa_status'], name='core_mpesap_mpesa_s_018447_idx'),
        ),
    ]
