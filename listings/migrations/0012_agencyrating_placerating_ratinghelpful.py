# Generated by Django 4.2 on 2025-08-12 17:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('listings', '0011_menucategory_menuitem'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgencyRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], help_text='Rating from 1 to 5')),
                ('comment', models.TextField(help_text='Your review and experience')),
                ('service_type', models.CharField(blank=True, help_text='Type of service used (e.g., Tour, Booking, Consultation)', max_length=50)),
                ('is_verified_customer', models.BooleanField(default=False, help_text="Verified that user used this agency's services")),
                ('is_helpful', models.BooleanField(default=False, help_text='Marked as helpful by other users')),
                ('helpful_count', models.PositiveIntegerField(default=0, help_text='Number of users who found this helpful')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='listings.agency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agency_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Agency Ratings',
                'ordering': ['-created_at'],
                'unique_together': {('agency', 'user')},
            },
        ),
        migrations.CreateModel(
            name='PlaceRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')], help_text='Rating from 1 to 5')),
                ('comment', models.TextField(help_text='Your review and experience')),
                ('is_verified_visit', models.BooleanField(default=False, help_text='Verified that user visited this place')),
                ('is_helpful', models.BooleanField(default=False, help_text='Marked as helpful by other users')),
                ('helpful_count', models.PositiveIntegerField(default=0, help_text='Number of users who found this helpful')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='listings.place')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Place Ratings',
                'ordering': ['-created_at'],
                'unique_together': {('place', 'user')},
            },
        ),
        migrations.CreateModel(
            name='RatingHelpful',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('agency_rating', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='helpful_votes', to='listings.agencyrating')),
                ('place_rating', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='helpful_votes', to='listings.placerating')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpful_votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Rating Helpful Votes',
                'unique_together': {('user', 'place_rating'), ('user', 'agency_rating')},
            },
        ),
    ]
